{
std::vector<double> F0Up;
std::vector<double> FlUp;
std::vector<double> FrUp;
std::vector<std::string> names;
names.push_back("b-tag");
names.push_back("mis-tag");
names.push_back("JER");
names.push_back("JES");
names.push_back("luminosity");
names.push_back("$\\rm m_{top}$");
names.push_back("Unclust. Energy");
names.push_back("pile up");
names.push_back("$\\rm Q^{2}$ scale");
names.push_back("$t\\bar{t}$ norm.");
names.push_back("single-top norm.");
names.push_back("EWK norm.");
names.push_back("QCD norm.");
names.push_back("Wshape (c-flavor)");
names.push_back("Wshape (b-flavor)");
//names.push_back("PDF");
names.push_back("CompHep");
/*names.push_back("MC stat.");
names.push_back("Anom. $V_R$");
names.push_back("Anom. $g_L$");
names.push_back("SM W-helicity Ref.");*/

//// btagUp
F0Up.push_back(-0.00103098);	FlUp.push_back(0.00105894);	FrUp.push_back(-2.79561e-05);
//// ctagUp
F0Up.push_back(4.12963e-07);	FlUp.push_back(1.97095e-07);	FrUp.push_back(-6.10058e-07);
//// JERUp
F0Up.push_back(0.00305783);	FlUp.push_back(-0.00333961);	FrUp.push_back(0.000281785);
//// JERUp
F0Up.push_back(0.00415735);	FlUp.push_back(-0.00150282);	FrUp.push_back(-0.00265453);
//// lumiUp
F0Up.push_back(-0.000499876);	FlUp.push_back(0.000490486);	FrUp.push_back(9.39066e-06);
//// massUp
F0Up.push_back(-0.00539379);	FlUp.push_back(0.000859728);	FrUp.push_back(0.00453406);
//// METUp
F0Up.push_back(0.001584850);	FlUp.push_back(-0.00367512);	FrUp.push_back(0.00209028);
//// puUp
F0Up.push_back(0.0024278);	FlUp.push_back(-0.00152153);	FrUp.push_back(-0.000906269);
//// Q2Up
F0Up.push_back(0.00074099);	FlUp.push_back(-0.0101813);	FrUp.push_back(0.00944033);
//// ttUp
F0Up.push_back(0.00137948);	FlUp.push_back(-0.00234182);	FrUp.push_back(-0.00046234);
//// tUp
F0Up.push_back(-0.000922754);	FlUp.push_back(0.000985266);	FrUp.push_back(-6.25123e-05);
//// ewknormUp
F0Up.push_back(-0.000402193);	FlUp.push_back(0.00142753);	FrUp.push_back(-0.00102534);
//// ewknormUp
F0Up.push_back(0.00169733);	FlUp.push_back(0.0058167);	FrUp.push_back(-0.00751403);
//// cwshapeUp
F0Up.push_back(0.00229852);	FlUp.push_back(0.00690959);	FrUp.push_back(-0.0092081);
//// bwshapeUp
F0Up.push_back(0.000528535);	FlUp.push_back(0.00345174);	FrUp.push_back(-0.00398028);
//// generatorUp
F0Up.push_back(-0.0118718);	FlUp.push_back(0.00768509);	FrUp.push_back(0.00418666);
std::vector<double> F0Down;
std::vector<double> FlDown;
std::vector<double> FrDown;

//// btagDown
F0Down.push_back(0.00103107);	FlDown.push_back(-0.0010563);	FrDown.push_back(2.52257e-05);
//// ctagDown
F0Down.push_back(4.12963e-07);	FlDown.push_back(1.97095e-07);	FrDown.push_back(-6.10058e-07);
//// JERDown
F0Down.push_back(-0.00103625);	FlDown.push_back(-0.0014062);	FrDown.push_back(0.00244245);
//// JERDown
F0Down.push_back(-0.000449051);	FlDown.push_back(-0.000806051);	FrDown.push_back(0.0012551);
//// lumiDown
F0Down.push_back(0.000117598);	FlDown.push_back(-0.000304607);	FrDown.push_back(0.000187008);
//// massDown
F0Down.push_back(0.000125845);	FlDown.push_back(-0.00134965);	FrDown.push_back(0.00122381);
//// METDown
F0Down.push_back(0.00565384);	FlDown.push_back(-0.00773432);	FrDown.push_back(0.00208048);
//// puDown
F0Down.push_back(-0.00264034);	FlDown.push_back(0.00148581);	FrDown.push_back(0.00115453);
//// Q2Down
F0Down.push_back(0.00514913);	FlDown.push_back(-0.00622579);	FrDown.push_back(0.00107666);
//// ttDown
F0Down.push_back(0.0013805);	FlDown.push_back(-0.00164327);	FrDown.push_back(-0.00026277);
//// tDown
F0Down.push_back(0.000936342);	FlDown.push_back(-0.00100154);	FrDown.push_back(6.51978e-05);
//// ewknormDown
F0Down.push_back(0.00039696);	FlDown.push_back(-0.00140575);	FrDown.push_back(0.00100879);
//// ewknormDown
F0Down.push_back(-0.00154063);	FlDown.push_back(-0.0053784);	FrDown.push_back(0.00691903);
//// cwshapeDown
F0Down.push_back(0.00311456);	FlDown.push_back(0.0029676);	FrDown.push_back(-0.00608216);
//// bwshapeDown
F0Down.push_back(-6.70837e-05);	FlDown.push_back(-0.00403328);	FrDown.push_back(0.00410036);
//// generatorDown
F0Down.push_back(-0.0118718);	FlDown.push_back(0.00768509);	FrDown.push_back(0.00418666);
cout<<F0Down.size()<<"\t"<<F0Up.size()<<"\t"<<names.size()<<endl;
std::cout.setf(std::ios::fixed);
std::cout.precision(3);
	std::vector<double> F0Sum;
	std::vector<double> FlSum;
	std::vector<double> FrSum;
	cout<<"|\t"<<"|\t\\Delta F_0|\t\\Delta F_L|\t\\Delta F_R"<<endl;
	for(unsigned int i = 0; i<F0Up.size(); i++){
		double f0 = (fabs(F0Up[i])+fabs(F0Down[i]))/2.;
		double fl = (fabs(FlUp[i])+fabs(FlDown[i]))/2.;
		double fr = (fabs(FrUp[i])+fabs(FrDown[i]))/2.;
		if(names[i] == "$\\rm m_{top}$"){
			f0=f0/3.;
			fl=fl/3.;
			fr=fr/3.;
		}
		std::cout<<"|"<<names[i]<<"|\t"<<f0<<"|\t"<<fl<<"|\t"<<fr<<std::endl;
		F0Sum.push_back(f0);
		FlSum.push_back(fl);
		FrSum.push_back(fr);
	}
	double df0 = 0;
	double dfl = 0;
	double dfr = 0;
	for(unsigned int i = 0; i<F0Up.size(); i++){
		df0 += pow(F0Sum[i],2);
		dfl += pow(FlSum[i],2);
		dfr += pow(FrSum[i],2);
	}
		std::cout<<"| Sum |\t"<<sqrt(df0)<<"|\t"<<sqrt(dfl)<<"|\t"<<sqrt(dfr)<<std::endl;

}
